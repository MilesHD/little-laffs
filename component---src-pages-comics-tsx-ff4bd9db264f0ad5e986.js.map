{"version":3,"sources":["webpack:///./src/pages/comics.tsx"],"names":["pageQuery","ComicIndex","componentDidMount","comics","this","props","data","allMarkdownRemark","edges","firstComic","node","lastComic","length","$","document","on","evt","stopPropagation","keyCode","navigate","fields","slug","componentWillUnmount","off","render","siteTitle","site","siteMetadata","title","location","className","map","frontmatter","key","to","date","React","Component"],"mappings":"8OASO,IAAMA,EAAY,aAoDnBC,E,wLACJC,kBAAA,WACE,IAAMC,EAASC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC3CC,EAAaN,EAAO,GAAGO,KACvBC,EAAYR,EAAOA,EAAOS,OAAS,GAAGF,KAG5CG,EAAEC,UAAUC,GAAG,WAAW,SAAAC,GACxBA,EAAIC,kBAD2B,IAGvBC,EAAYF,EAAZE,QAGQ,KAAZA,GACFC,mBAASR,EAAUS,OAAOC,MAGZ,KAAZH,GACFC,mBAASV,EAAWW,OAAOC,U,EAKjCC,qBAAA,WAEET,EAAEC,UAAUS,IAAI,Y,EAGlBC,OAAA,WAAS,IACClB,EAASF,KAAKC,MAAdC,KACFmB,EAAYnB,EAAKoB,KAAKC,aAAaC,MACnCzB,EAASG,EAAKC,kBAAkBC,MAEtC,OACE,kBAAC,IAAD,CAAQqB,SAAUA,SAAUD,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,WACX,yBAAKE,UAAU,eACb,yBAAKA,UAAU,mBAAf,kDAGA,yBAAKA,UAAU,mBAAf,gGAGA,yBAAKA,UAAU,mBAAf,yEAGA,yBAAKA,UAAU,mBACb,kGAIF,yBAAKA,UAAU,gBACZ3B,EAAO4B,KAAI,YAAc,IAAXrB,EAAW,EAAXA,KACPkB,EAAQlB,EAAKsB,YAAYJ,OAASlB,EAAKU,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMY,IAAKvB,EAAKU,OAAOC,KAAMa,GAAIxB,EAAKU,OAAOC,MAC3C,yBAAKS,UAAU,mBACb,yBAAKA,UAAU,gBACZF,GAEH,yBAAKE,UAAU,eACZpB,EAAKsB,YAAYG,e,GA7DfC,IAAMC,WA0EhBpC","file":"component---src-pages-comics-tsx-ff4bd9db264f0ad5e986.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { navigate, PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../styles/comics.css\"\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/comics/\" } } },\n      sort: { fields: [frontmatter___date],\n      order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nclass ComicIndex extends React.Component {\n  componentDidMount() {\n    const comics = this.props.data.allMarkdownRemark.edges\n    const firstComic = comics[0].node\n    const lastComic = comics[comics.length - 1].node\n\n    // Arrow Key integration\n    $(document).on('keydown', evt => {\n      evt.stopPropagation()\n\n      const { keyCode } = evt\n\n      // Left Arrow\n      if (keyCode === 37) {\n        navigate(lastComic.fields.slug)\n      }\n      // Right Arrow\n      if (keyCode === 39) {\n        navigate(firstComic.fields.slug)\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    // Remove Event Handlers\n    $(document).off('keydown')\n  }\n\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const comics = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Comics\" />\n        <div className=\"comics-page\">\n          <div className=\"comics__section\">\n            Comics have been called the \"One True\" medium.\n          </div>\n          <div className=\"comics__section\">\n            A unique blend of visuals and words that wax poetic the limits of our humor and imagination. \n          </div>\n          <div className=\"comics__section\">\n            If you're in need of a chukle or two, you've come to the right place.\n          </div>\n          <div className=\"comics__section\">\n            <b>\n              Pro Tip: Use the left and right arrow keys for quicker navigation.\n            </b>\n          </div>\n          <div className=\"comics__list\">\n            {comics.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <Link key={node.fields.slug} to={node.fields.slug}>\n                  <div className=\"comic-list-item\">\n                    <div className=\"comic__title\">\n                      {title}\n                    </div>\n                    <div className=\"comic__date\">\n                      {node.frontmatter.date}\n                    </div>\n                  </div>\n                </Link>\n              )\n            })}\n          </div>\n       </div> \n      </Layout>\n    )\n  }\n}\n\nexport default ComicIndex\n"],"sourceRoot":""}